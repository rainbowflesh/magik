package ${package}.dao;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Repository;

import ${package}.model.${className};

/**
 * ${comments}
 */
@Repository
public class ${className}Dao extends BaseDaoMySqlImpl<${className},${pk.attrType}> {

    /**
     * 分页查询
     * @param page page
     * @param rows rows
     * @param condiction condiction
     * @return PageBean<Map<String,Object>>
     */
    public PageBean<Map<String, Object>> findPage(Integer page, Integer rows, String sort, String order, Map<String, Object> condiction) {
        StringBuilder sql = new StringBuilder();
        sql.append(" select ");
        #foreach($column in $columns)
            #if(${velocityCount}==1)
                #if($column.attrType=='Date'||$column.attrType=='Timestamp')
                    sql.append(" date_format(${column.columnName},'%Y-%m-%d %H:%i:%S')  ${column.columnName}");
                #else
                    sql.append(" ${column.columnName}");
                #end
            #else
                #if($column.attrType=='Date'||$column.attrType=="Timestamp")
                    sql.append(" ,date_format(${column.columnName},'%Y-%m-%d %H:%i:%S') ${column.columnName}");
                #else
                    sql.append(" ,${column.columnName}");
                #end
            #end
        #end
        sql.append(" from ${tableName} where 1=1");
        #foreach ($column in $columns)
            #if(${column.columnName}=='is_delete')
                sql.append(" and is_delete!='1'");
            #end
        #end
        List<Object> values = new ArrayList<Object>();
        if (condiction != null) {
            #foreach ($column in $columns)
                #if(${column.attrname} !=${pk.attrname}&&${column.columnName} !='IS_DELETE')
                    #if(${column.attrType}=='Date'||${column.attrType}=='Timestamp')
                        if (StringUtils.isNotBlank((String) condiction.get("${column.attrname}Start"))) {
                            sql.append(" AND ${column.columnName}>= str_to_date(?, '%Y-%m-%d %H:%i:%s')");
                            values.add(condiction.get("${column.attrname}Start") + " 00:00:00");
                        }
                        if (StringUtils.isNotBlank((String) condiction.get("${column.attrname}End"))) {
                            sql.append(" AND ${column.columnName}<= str_to_date(?, '%Y-%m-%d %H:%i:%s')");
                            values.add(condiction.get("${column.attrname}End") + " 23:59:59");
                        }
                    #else
                        if (StringUtils.isNotBlank((String) condiction.get("${column.attrname}"))) {
                            sql.append(" AND ${column.columnName}=?");
                            values.add(condiction.get("${column.attrname}"));
                        }
                    #end
                #end
            #end
        }
        PageBean<Map<String, Object>> pageBean = new PageBean<Map<String, Object>>(page, rows);
        pageBean.putSortOrder(sort, order);
        return super.pageForMap(sql.toString(), values, pageBean);
    }

    /**
     * 查询列表
     * @param condiction condiction
     * @return PageBean<Map<String,Object>>
     */
    public List<Map<String, Object>> findList(String sort, String order, Map<String, Object> condiction) {
        StringBuilder sql = new StringBuilder();
        sql.append(" select ");
        #foreach($column in $columns)
            #if(${velocityCount}==1)
                #if($column.attrType=='Date'||$column.attrType=='Timestamp')
                    sql.append("date_format(${column.columnName},'%Y-%m-%d %H:%i:%S') ${column.columnName}");
                #else
                    sql.append(" ${column.columnName}");
                #end
            #else
                #if($column.attrType=='Date'||$column.attrType=="Timestamp")
                    sql.append(" ,date_format(${column.columnName},'%Y-%m-%d %H:%i:%S') ${column.columnName}");
                #else
                    sql.append(" ,${column.columnName}");
                #end
            #end
        #end
        sql.append(" from ${tableName} where 1=1");
        #foreach ($column in $columns)
            #if(${column.columnName}=='is_delete')
                sql.append(" and is_delete!='1'");
            #end
        #end
        List<Object> values = new ArrayList<Object>();
        if (condiction != null) {
            #foreach ($column in $columns)
                #if(${column.attrname} !=${pk.attrname})
                    #if(${column.attrType}=='Date'||${column.attrType}=='Timestamp')
                        if (StringUtils.isNotBlank((String) condiction.get("${column.attrname}Start"))) {
                            sql.append(" AND ${column.columnName}>= str_to_date(?, '%Y-%m-%d %H:%i:%s')");
                            values.add(condiction.get("${column.attrname}Start") + " 00:00:00");
                        }
                        if (StringUtils.isNotBlank((String) condiction.get("${column.attrname}End"))) {
                            sql.append(" AND ${column.columnName}<= str_to_date(?, '%Y-%m-%d %H:%i:%s')");
                            values.add(condiction.get("${column.attrname}End") + " 23:59:59");
                        }
                    #else
                        if (StringUtils.isNotBlank((String) condiction.get("${column.attrname}"))) {
                            sql.append(" AND ${column.columnName}=?");
                            values.add(condiction.get("${column.attrname}"));
                        }
                    #end
                #end
            #end
        }
        if (!StringUtils.isBlank(sort)) {
            sql.append(" order by ");
            sql.append(this.getColumnNameByFiledName(sort));
            if (!StringUtils.isBlank(order)) {
                sql.append(" ");
                sql.append(order);
            }
        }
        return this.searchForMap(sql.toString(), values);
    }
}